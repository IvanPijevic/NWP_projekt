name: Build 32-bit C++ on Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install Chocolatey packages (MinGW + SDL2)
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        choco install mingw --version=8.1.0
        choco install sdl2
        echo "MinGW and SDL2 installed via Choco"

    - name: Verify SDL2 structure (debug)
      shell: pwsh
      run: |
        $sdlInclude = "Dev/SDL/include"
        $sdlLib = "Dev/SDL/lib"
        $glewInclude = "Dev/SDL/include"
        $glewLib = "Dev/SDL/lib"
        $glutInclude = "Dev/SDL/include"
        $glutLib = "Dev/SDL/lib"
        if (Test-Path $sdlInclude) { 
          Write-Output "SDL include found: $sdlInclude"
          Get-ChildItem $sdlInclude -Recurse -Name | Where-Object { $_.EndsWith('.h') } | Write-Output
        } else { 
          Write-Warning "SDL include NOT found at $sdlInclude" 
        }
        if (Test-Path $sdlLib) { 
          Write-Output "SDL lib found: $sdlLib"
          Get-ChildItem $sdlLib -Name | Where-Object { $_.EndsWith('.a') -or $_.EndsWith('.lib') } | Write-Output
        } else { 
          Write-Warning "SDL lib NOT found at $sdlLib" 
        }

    - name: Set up paths (from repo Dev/SDL)
      shell: pwsh
      run: |
        $includePath = "Dev/SDL/include"
        $libPath = "Dev/SDL/lib"
        $binPath = "Dev/SDL/bin"
        $env:INCLUDE = $includePath + ";" + $env:INCLUDE
        $env:LIB = $libPath + ";" + $env:LIB
        $env:PATH = $binPath + ";" + $env:PATH
        echo "Final paths: INCLUDE=$env:INCLUDE | LIB=$env:LIB | PATH includes $binPath"

    - name: Build project (32-bit)
      shell: pwsh
      run: |
        g++ -m32 -Wall -o output_binary.exe GraphicTutBen/Main.cpp GraphicTutBen/*.cpp -I"$env:INCLUDE" -L"$env:LIB" -lmingw32 -lSDL2main -lSDL2 -lSDL2_ttf -lGLEW32 -lfreeglut -lopengl32
        if ($LASTEXITCODE -ne 0) { 
          Write-Error "Build failed! Provjeri logove gore za putanje." 
          exit 1 
        }
        echo "Build SUCCESS! Output: output_binary.exe"
